@model Library.ViewModels.Models.RegisterModel
@{
    Layout = null;
}

<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="icon" href="~/favicon.ico">

    <title>Register</title>

    <link href="~/Content/bootstrap.min.css" rel="stylesheet">

    <link href="~/Content/ie10-viewport-bug-workaround.css" rel="stylesheet">

    <link href="~/Content/signin.css" rel="stylesheet">

    <script src="~/Scripts/ie-emulation-modes-warning.js"></script>
</head>

<body class="text-center">

    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-signin" }))
    {
        @Html.AntiForgeryToken()
        <h1 class="h3 mb-3 font-weight-normal">Register</h1>
        <br>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "sr-only" })
        <input class="form-control" data-val="true" data-val-required="The Email field is required." id="Email" name="Email" type="email" value="" placeholder="Email address" required autofocus>
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        <br>
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "sr-only" })
        <input class="form-control" data-val="true" data-val-required="The Password field is required." id="Password" name="Password" type="password" value="" placeholder="Password" required>
        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        <br>
        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "sr-only" })
        <input class="form-control" data-val="true" data-val-equalto="'ConfirmPassword' and 'Password' do not match." data-val-equalto-other="*.Password" data-val-required="The ConfirmPassword field is required." id="ConfirmPassword" name="ConfirmPassword" type="password" value="" placeholder="Confirm Password" required>
        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        <br>
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "sr-only" })
        <input class="form-control" data-val="true" data-val-required="The Address field is required." id="Address" name="Address" type="text" value="" placeholder="Adress" required>
        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        <br>
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "sr-only" })
        <input class="form-control text-box single-line" id="Name" name="Name" type="text" value="" placeholder="Name" required>
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        <br>
        <button class="btn btn-lg btn-primary" type="submit">Register</button>
        <br>
        <br>
        <div>
            @Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })<br>
            @Html.ActionLink("Back to Main", "Index", "Publication")
        </div>
    }

    <script src="~/Scripts/ie10-viewport-bug-workaround.js"></script>

</body>
</html>